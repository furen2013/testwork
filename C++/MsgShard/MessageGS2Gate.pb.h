// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MessageGS2Gate.proto

#ifndef PROTOBUF_MessageGS2Gate_2eproto__INCLUDED
#define PROTOBUF_MessageGS2Gate_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
#include "MsgHead.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_MessageGS2Gate_2eproto();
void protobuf_AssignDesc_MessageGS2Gate_2eproto();
void protobuf_ShutdownFile_MessageGS2Gate_2eproto();

class GS2GateLoginOKACK;
class GS2GateErrorACK;

enum GS2GateErrorACK_enResult {
  GS2GateErrorACK_enResult_LG_UNKNOW = 0,
  GS2GateErrorACK_enResult_LG_ALREADYLOGIN = 1
};
bool GS2GateErrorACK_enResult_IsValid(int value);
const GS2GateErrorACK_enResult GS2GateErrorACK_enResult_enResult_MIN = GS2GateErrorACK_enResult_LG_UNKNOW;
const GS2GateErrorACK_enResult GS2GateErrorACK_enResult_enResult_MAX = GS2GateErrorACK_enResult_LG_ALREADYLOGIN;
const int GS2GateErrorACK_enResult_enResult_ARRAYSIZE = GS2GateErrorACK_enResult_enResult_MAX + 1;

const ::google::protobuf::EnumDescriptor* GS2GateErrorACK_enResult_descriptor();
inline const ::std::string& GS2GateErrorACK_enResult_Name(GS2GateErrorACK_enResult value) {
  return ::google::protobuf::internal::NameOfEnum(
    GS2GateErrorACK_enResult_descriptor(), value);
}
inline bool GS2GateErrorACK_enResult_Parse(
    const ::std::string& name, GS2GateErrorACK_enResult* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GS2GateErrorACK_enResult>(
    GS2GateErrorACK_enResult_descriptor(), name, value);
}
// ===================================================================

class GS2GateLoginOKACK : public ::google::protobuf::Message {
 public:
  GS2GateLoginOKACK();
  virtual ~GS2GateLoginOKACK();
  
  GS2GateLoginOKACK(const GS2GateLoginOKACK& from);
  
  inline GS2GateLoginOKACK& operator=(const GS2GateLoginOKACK& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const GS2GateLoginOKACK& default_instance();
  
  void Swap(GS2GateLoginOKACK* other);
  
  // implements Message ----------------------------------------------
  
  GS2GateLoginOKACK* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GS2GateLoginOKACK& from);
  void MergeFrom(const GS2GateLoginOKACK& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  
  // required int32 level = 2;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 2;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);
  
  // required int32 icon = 3;
  inline bool has_icon() const;
  inline void clear_icon();
  static const int kIconFieldNumber = 3;
  inline ::google::protobuf::int32 icon() const;
  inline void set_icon(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:GS2GateLoginOKACK)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_icon();
  inline void clear_has_icon();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* name_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::int32 icon_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_MessageGS2Gate_2eproto();
  friend void protobuf_AssignDesc_MessageGS2Gate_2eproto();
  friend void protobuf_ShutdownFile_MessageGS2Gate_2eproto();
  
  void InitAsDefaultInstance();
  static GS2GateLoginOKACK* default_instance_;
};
// -------------------------------------------------------------------

class GS2GateErrorACK : public ::google::protobuf::Message {
 public:
  GS2GateErrorACK();
  virtual ~GS2GateErrorACK();
  
  GS2GateErrorACK(const GS2GateErrorACK& from);
  
  inline GS2GateErrorACK& operator=(const GS2GateErrorACK& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const GS2GateErrorACK& default_instance();
  
  void Swap(GS2GateErrorACK* other);
  
  // implements Message ----------------------------------------------
  
  GS2GateErrorACK* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GS2GateErrorACK& from);
  void MergeFrom(const GS2GateErrorACK& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef GS2GateErrorACK_enResult enResult;
  static const enResult LG_UNKNOW = GS2GateErrorACK_enResult_LG_UNKNOW;
  static const enResult LG_ALREADYLOGIN = GS2GateErrorACK_enResult_LG_ALREADYLOGIN;
  static inline bool enResult_IsValid(int value) {
    return GS2GateErrorACK_enResult_IsValid(value);
  }
  static const enResult enResult_MIN =
    GS2GateErrorACK_enResult_enResult_MIN;
  static const enResult enResult_MAX =
    GS2GateErrorACK_enResult_enResult_MAX;
  static const int enResult_ARRAYSIZE =
    GS2GateErrorACK_enResult_enResult_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  enResult_descriptor() {
    return GS2GateErrorACK_enResult_descriptor();
  }
  static inline const ::std::string& enResult_Name(enResult value) {
    return GS2GateErrorACK_enResult_Name(value);
  }
  static inline bool enResult_Parse(const ::std::string& name,
      enResult* value) {
    return GS2GateErrorACK_enResult_Parse(name, value);
  }
  
  // accessors -------------------------------------------------------
  
  // required .GS2GateErrorACK.enResult en = 1;
  inline bool has_en() const;
  inline void clear_en();
  static const int kEnFieldNumber = 1;
  inline ::GS2GateErrorACK_enResult en() const;
  inline void set_en(::GS2GateErrorACK_enResult value);
  
  // @@protoc_insertion_point(class_scope:GS2GateErrorACK)
 private:
  inline void set_has_en();
  inline void clear_has_en();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  int en_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_MessageGS2Gate_2eproto();
  friend void protobuf_AssignDesc_MessageGS2Gate_2eproto();
  friend void protobuf_ShutdownFile_MessageGS2Gate_2eproto();
  
  void InitAsDefaultInstance();
  static GS2GateErrorACK* default_instance_;
};
// ===================================================================


// ===================================================================

// GS2GateLoginOKACK

// required string name = 1;
inline bool GS2GateLoginOKACK::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GS2GateLoginOKACK::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GS2GateLoginOKACK::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GS2GateLoginOKACK::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& GS2GateLoginOKACK::name() const {
  return *name_;
}
inline void GS2GateLoginOKACK::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void GS2GateLoginOKACK::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void GS2GateLoginOKACK::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GS2GateLoginOKACK::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* GS2GateLoginOKACK::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required int32 level = 2;
inline bool GS2GateLoginOKACK::has_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GS2GateLoginOKACK::set_has_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GS2GateLoginOKACK::clear_has_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GS2GateLoginOKACK::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 GS2GateLoginOKACK::level() const {
  return level_;
}
inline void GS2GateLoginOKACK::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
}

// required int32 icon = 3;
inline bool GS2GateLoginOKACK::has_icon() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GS2GateLoginOKACK::set_has_icon() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GS2GateLoginOKACK::clear_has_icon() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GS2GateLoginOKACK::clear_icon() {
  icon_ = 0;
  clear_has_icon();
}
inline ::google::protobuf::int32 GS2GateLoginOKACK::icon() const {
  return icon_;
}
inline void GS2GateLoginOKACK::set_icon(::google::protobuf::int32 value) {
  set_has_icon();
  icon_ = value;
}

// -------------------------------------------------------------------

// GS2GateErrorACK

// required .GS2GateErrorACK.enResult en = 1;
inline bool GS2GateErrorACK::has_en() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GS2GateErrorACK::set_has_en() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GS2GateErrorACK::clear_has_en() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GS2GateErrorACK::clear_en() {
  en_ = 0;
  clear_has_en();
}
inline ::GS2GateErrorACK_enResult GS2GateErrorACK::en() const {
  return static_cast< ::GS2GateErrorACK_enResult >(en_);
}
inline void GS2GateErrorACK::set_en(::GS2GateErrorACK_enResult value) {
  GOOGLE_DCHECK(::GS2GateErrorACK_enResult_IsValid(value));
  set_has_en();
  en_ = value;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::GS2GateErrorACK_enResult>() {
  return ::GS2GateErrorACK_enResult_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_MessageGS2Gate_2eproto__INCLUDED
