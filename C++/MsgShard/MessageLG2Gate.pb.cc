// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "MessageLG2Gate.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* MsgLG2GateLoginACK_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgLG2GateLoginACK_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* MsgLG2GateLoginACK_enResult_descriptor_ = NULL;
const ::google::protobuf::Descriptor* MsgLG2GateBindACK_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgLG2GateBindACK_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* enMsgBindResult_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* enBindTypeLogic_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_MessageLG2Gate_2eproto() {
  protobuf_AddDesc_MessageLG2Gate_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "MessageLG2Gate.proto");
  GOOGLE_CHECK(file != NULL);
  MsgLG2GateLoginACK_descriptor_ = file->message_type(0);
  static const int MsgLG2GateLoginACK_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLG2GateLoginACK, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLG2GateLoginACK, account_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLG2GateLoginACK, result_),
  };
  MsgLG2GateLoginACK_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgLG2GateLoginACK_descriptor_,
      MsgLG2GateLoginACK::default_instance_,
      MsgLG2GateLoginACK_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLG2GateLoginACK, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLG2GateLoginACK, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgLG2GateLoginACK));
  MsgLG2GateLoginACK_enResult_descriptor_ = MsgLG2GateLoginACK_descriptor_->enum_type(0);
  MsgLG2GateBindACK_descriptor_ = file->message_type(1);
  static const int MsgLG2GateBindACK_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLG2GateBindACK, account_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLG2GateBindACK, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLG2GateBindACK, entype_),
  };
  MsgLG2GateBindACK_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgLG2GateBindACK_descriptor_,
      MsgLG2GateBindACK::default_instance_,
      MsgLG2GateBindACK_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLG2GateBindACK, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLG2GateBindACK, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgLG2GateBindACK));
  enMsgBindResult_descriptor_ = file->enum_type(0);
  enBindTypeLogic_descriptor_ = file->enum_type(1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_MessageLG2Gate_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgLG2GateLoginACK_descriptor_, &MsgLG2GateLoginACK::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgLG2GateBindACK_descriptor_, &MsgLG2GateBindACK::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_MessageLG2Gate_2eproto() {
  delete MsgLG2GateLoginACK::default_instance_;
  delete MsgLG2GateLoginACK_reflection_;
  delete MsgLG2GateBindACK::default_instance_;
  delete MsgLG2GateBindACK_reflection_;
}

void protobuf_AddDesc_MessageLG2Gate_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protobuf_AddDesc_MsgHead_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\024MessageLG2Gate.proto\032\rMsgHead.proto\"\257\001"
    "\n\022MsgLG2GateLoginACK\022\n\n\002id\030\001 \002(\004\022\017\n\007acco"
    "unt\030\002 \002(\004\022,\n\006result\030\003 \002(\0162\034.MsgLG2GateLo"
    "ginACK.enResult\"N\n\010enResult\022\t\n\005LG_OK\020\000\022\014"
    "\n\010LG_ERROR\020\001\022\024\n\020LG_ERRORPASSWORD\020\002\022\023\n\017LG"
    "_NOTFOUNDMAIL\020\003\"h\n\021MsgLG2GateBindACK\022\017\n\007"
    "account\030\001 \002(\004\022 \n\006result\030\002 \002(\0162\020.enMsgBin"
    "dResult\022 \n\006enType\030\003 \002(\0162\020.enBindTypeLogi"
    "c*\375\002\n\017enMsgBindResult\022\024\n\020BindMsgResult_O"
    "K\020\000\022\"\n\036BindMsgResultMailAlreadyBinded\020\001\022"
    "!\n\035BindMsgResultMacAlreadyBinded\020\002\022 \n\034Bi"
    "ndMsgResultNotFoundAccount\020\003\022\031\n\025BindMsgR"
    "esultEmptyMac\020\004\022\036\n\032BindMsgResultEmptyPas"
    "sword\020\005\022\032\n\026BindMsgResultEmptyMail\020\006\022\036\n\032B"
    "indMsgResultErrorPassword\020\007\022\031\n\025BindMsgRe"
    "sultErrorMac\020\010\022\032\n\026BindMsgResultErrorMail"
    "\020\t\022\035\n\031BindMsgResultNotFoundUser\020\n\022\036\n\032Bin"
    "dMsgResultError_Unknown\020\013*e\n\017enBindTypeL"
    "ogic\022\032\n\026TypeBindLogic_BindMail\020\000\022\033\n\027Type"
    "BindLogic_UnbindMac\020\001\022\031\n\025TypeBindLogic_B"
    "indMac\020\002", 808);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "MessageLG2Gate.proto", &protobuf_RegisterTypes);
  MsgLG2GateLoginACK::default_instance_ = new MsgLG2GateLoginACK();
  MsgLG2GateBindACK::default_instance_ = new MsgLG2GateBindACK();
  MsgLG2GateLoginACK::default_instance_->InitAsDefaultInstance();
  MsgLG2GateBindACK::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_MessageLG2Gate_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_MessageLG2Gate_2eproto {
  StaticDescriptorInitializer_MessageLG2Gate_2eproto() {
    protobuf_AddDesc_MessageLG2Gate_2eproto();
  }
} static_descriptor_initializer_MessageLG2Gate_2eproto_;

const ::google::protobuf::EnumDescriptor* enMsgBindResult_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return enMsgBindResult_descriptor_;
}
bool enMsgBindResult_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* enBindTypeLogic_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return enBindTypeLogic_descriptor_;
}
bool enBindTypeLogic_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* MsgLG2GateLoginACK_enResult_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgLG2GateLoginACK_enResult_descriptor_;
}
bool MsgLG2GateLoginACK_enResult_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const MsgLG2GateLoginACK_enResult MsgLG2GateLoginACK::LG_OK;
const MsgLG2GateLoginACK_enResult MsgLG2GateLoginACK::LG_ERROR;
const MsgLG2GateLoginACK_enResult MsgLG2GateLoginACK::LG_ERRORPASSWORD;
const MsgLG2GateLoginACK_enResult MsgLG2GateLoginACK::LG_NOTFOUNDMAIL;
const MsgLG2GateLoginACK_enResult MsgLG2GateLoginACK::enResult_MIN;
const MsgLG2GateLoginACK_enResult MsgLG2GateLoginACK::enResult_MAX;
const int MsgLG2GateLoginACK::enResult_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int MsgLG2GateLoginACK::kIdFieldNumber;
const int MsgLG2GateLoginACK::kAccountFieldNumber;
const int MsgLG2GateLoginACK::kResultFieldNumber;
#endif  // !_MSC_VER

MsgLG2GateLoginACK::MsgLG2GateLoginACK()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void MsgLG2GateLoginACK::InitAsDefaultInstance() {
}

MsgLG2GateLoginACK::MsgLG2GateLoginACK(const MsgLG2GateLoginACK& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void MsgLG2GateLoginACK::SharedCtor() {
  _cached_size_ = 0;
  id_ = GOOGLE_ULONGLONG(0);
  account_ = GOOGLE_ULONGLONG(0);
  result_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgLG2GateLoginACK::~MsgLG2GateLoginACK() {
  SharedDtor();
}

void MsgLG2GateLoginACK::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgLG2GateLoginACK::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgLG2GateLoginACK::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgLG2GateLoginACK_descriptor_;
}

const MsgLG2GateLoginACK& MsgLG2GateLoginACK::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MessageLG2Gate_2eproto();  return *default_instance_;
}

MsgLG2GateLoginACK* MsgLG2GateLoginACK::default_instance_ = NULL;

MsgLG2GateLoginACK* MsgLG2GateLoginACK::New() const {
  return new MsgLG2GateLoginACK;
}

void MsgLG2GateLoginACK::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = GOOGLE_ULONGLONG(0);
    account_ = GOOGLE_ULONGLONG(0);
    result_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgLG2GateLoginACK::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_account;
        break;
      }
      
      // required uint64 account = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_account:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &account_)));
          set_has_account();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_result;
        break;
      }
      
      // required .MsgLG2GateLoginACK.enResult result = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_result:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgLG2GateLoginACK_enResult_IsValid(value)) {
            set_result(static_cast< ::MsgLG2GateLoginACK_enResult >(value));
          } else {
            mutable_unknown_fields()->AddVarint(3, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgLG2GateLoginACK::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint64 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->id(), output);
  }
  
  // required uint64 account = 2;
  if (has_account()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->account(), output);
  }
  
  // required .MsgLG2GateLoginACK.enResult result = 3;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->result(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgLG2GateLoginACK::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint64 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->id(), target);
  }
  
  // required uint64 account = 2;
  if (has_account()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->account(), target);
  }
  
  // required .MsgLG2GateLoginACK.enResult result = 3;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->result(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgLG2GateLoginACK::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint64 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->id());
    }
    
    // required uint64 account = 2;
    if (has_account()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->account());
    }
    
    // required .MsgLG2GateLoginACK.enResult result = 3;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->result());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgLG2GateLoginACK::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgLG2GateLoginACK* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgLG2GateLoginACK*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgLG2GateLoginACK::MergeFrom(const MsgLG2GateLoginACK& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_account()) {
      set_account(from.account());
    }
    if (from.has_result()) {
      set_result(from.result());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgLG2GateLoginACK::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgLG2GateLoginACK::CopyFrom(const MsgLG2GateLoginACK& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgLG2GateLoginACK::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  
  return true;
}

void MsgLG2GateLoginACK::Swap(MsgLG2GateLoginACK* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(account_, other->account_);
    std::swap(result_, other->result_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgLG2GateLoginACK::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgLG2GateLoginACK_descriptor_;
  metadata.reflection = MsgLG2GateLoginACK_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgLG2GateBindACK::kAccountFieldNumber;
const int MsgLG2GateBindACK::kResultFieldNumber;
const int MsgLG2GateBindACK::kEnTypeFieldNumber;
#endif  // !_MSC_VER

MsgLG2GateBindACK::MsgLG2GateBindACK()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void MsgLG2GateBindACK::InitAsDefaultInstance() {
}

MsgLG2GateBindACK::MsgLG2GateBindACK(const MsgLG2GateBindACK& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void MsgLG2GateBindACK::SharedCtor() {
  _cached_size_ = 0;
  account_ = GOOGLE_ULONGLONG(0);
  result_ = 0;
  entype_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgLG2GateBindACK::~MsgLG2GateBindACK() {
  SharedDtor();
}

void MsgLG2GateBindACK::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgLG2GateBindACK::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgLG2GateBindACK::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgLG2GateBindACK_descriptor_;
}

const MsgLG2GateBindACK& MsgLG2GateBindACK::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MessageLG2Gate_2eproto();  return *default_instance_;
}

MsgLG2GateBindACK* MsgLG2GateBindACK::default_instance_ = NULL;

MsgLG2GateBindACK* MsgLG2GateBindACK::New() const {
  return new MsgLG2GateBindACK;
}

void MsgLG2GateBindACK::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    account_ = GOOGLE_ULONGLONG(0);
    result_ = 0;
    entype_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgLG2GateBindACK::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 account = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &account_)));
          set_has_account();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_result;
        break;
      }
      
      // required .enMsgBindResult result = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_result:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (enMsgBindResult_IsValid(value)) {
            set_result(static_cast< enMsgBindResult >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_enType;
        break;
      }
      
      // required .enBindTypeLogic enType = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_enType:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (enBindTypeLogic_IsValid(value)) {
            set_entype(static_cast< enBindTypeLogic >(value));
          } else {
            mutable_unknown_fields()->AddVarint(3, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgLG2GateBindACK::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint64 account = 1;
  if (has_account()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->account(), output);
  }
  
  // required .enMsgBindResult result = 2;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->result(), output);
  }
  
  // required .enBindTypeLogic enType = 3;
  if (has_entype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->entype(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgLG2GateBindACK::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint64 account = 1;
  if (has_account()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->account(), target);
  }
  
  // required .enMsgBindResult result = 2;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->result(), target);
  }
  
  // required .enBindTypeLogic enType = 3;
  if (has_entype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->entype(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgLG2GateBindACK::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint64 account = 1;
    if (has_account()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->account());
    }
    
    // required .enMsgBindResult result = 2;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->result());
    }
    
    // required .enBindTypeLogic enType = 3;
    if (has_entype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->entype());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgLG2GateBindACK::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgLG2GateBindACK* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgLG2GateBindACK*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgLG2GateBindACK::MergeFrom(const MsgLG2GateBindACK& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_account()) {
      set_account(from.account());
    }
    if (from.has_result()) {
      set_result(from.result());
    }
    if (from.has_entype()) {
      set_entype(from.entype());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgLG2GateBindACK::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgLG2GateBindACK::CopyFrom(const MsgLG2GateBindACK& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgLG2GateBindACK::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  
  return true;
}

void MsgLG2GateBindACK::Swap(MsgLG2GateBindACK* other) {
  if (other != this) {
    std::swap(account_, other->account_);
    std::swap(result_, other->result_);
    std::swap(entype_, other->entype_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgLG2GateBindACK::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgLG2GateBindACK_descriptor_;
  metadata.reflection = MsgLG2GateBindACK_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
