// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MessageTechnologyG2C.proto

#ifndef PROTOBUF_MessageTechnologyG2C_2eproto__INCLUDED
#define PROTOBUF_MessageTechnologyG2C_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
#include "MsgHead.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_MessageTechnologyG2C_2eproto();
void protobuf_AssignDesc_MessageTechnologyG2C_2eproto();
void protobuf_ShutdownFile_MessageTechnologyG2C_2eproto();

class MsgTechInfo;
class MsgTechLevelInfo;
class MsgTechnologyInfo;
class MsgTechnologyStateACK;
class MsgOpenTechLevelACK;
class MsgApplyAddTechInfoACK;
class MsgAddTechValueACK;

enum enTechnologyResult {
  Technology_OK = 0,
  Technology_ErrorNotFindLevel = 1,
  Technology_ErrorNotFindTechInfo = 2,
  Technology_ErrorNotEnoughMoneyOpenLevel = 3,
  Technology_ErrorNotEnoughValueAddTech = 4,
  Technology_ErrorNotEnoughNotFoundUser = 5,
  Technology_ErrorNotHaveReqTech = 6,
  Technology_ErrorNotHaveTech = 7,
  Technology_ErrorAlreadyHaveLevel = 8
};
bool enTechnologyResult_IsValid(int value);
const enTechnologyResult enTechnologyResult_MIN = Technology_OK;
const enTechnologyResult enTechnologyResult_MAX = Technology_ErrorAlreadyHaveLevel;
const int enTechnologyResult_ARRAYSIZE = enTechnologyResult_MAX + 1;

const ::google::protobuf::EnumDescriptor* enTechnologyResult_descriptor();
inline const ::std::string& enTechnologyResult_Name(enTechnologyResult value) {
  return ::google::protobuf::internal::NameOfEnum(
    enTechnologyResult_descriptor(), value);
}
inline bool enTechnologyResult_Parse(
    const ::std::string& name, enTechnologyResult* value) {
  return ::google::protobuf::internal::ParseNamedEnum<enTechnologyResult>(
    enTechnologyResult_descriptor(), name, value);
}
// ===================================================================

class MsgTechInfo : public ::google::protobuf::Message {
 public:
  MsgTechInfo();
  virtual ~MsgTechInfo();
  
  MsgTechInfo(const MsgTechInfo& from);
  
  inline MsgTechInfo& operator=(const MsgTechInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgTechInfo& default_instance();
  
  void Swap(MsgTechInfo* other);
  
  // implements Message ----------------------------------------------
  
  MsgTechInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgTechInfo& from);
  void MergeFrom(const MsgTechInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);
  
  // required int32 currentCount = 2;
  inline bool has_currentcount() const;
  inline void clear_currentcount();
  static const int kCurrentCountFieldNumber = 2;
  inline ::google::protobuf::int32 currentcount() const;
  inline void set_currentcount(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:MsgTechInfo)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_currentcount();
  inline void clear_has_currentcount();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 currentcount_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_MessageTechnologyG2C_2eproto();
  friend void protobuf_AssignDesc_MessageTechnologyG2C_2eproto();
  friend void protobuf_ShutdownFile_MessageTechnologyG2C_2eproto();
  
  void InitAsDefaultInstance();
  static MsgTechInfo* default_instance_;
};
// -------------------------------------------------------------------

class MsgTechLevelInfo : public ::google::protobuf::Message {
 public:
  MsgTechLevelInfo();
  virtual ~MsgTechLevelInfo();
  
  MsgTechLevelInfo(const MsgTechLevelInfo& from);
  
  inline MsgTechLevelInfo& operator=(const MsgTechLevelInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgTechLevelInfo& default_instance();
  
  void Swap(MsgTechLevelInfo* other);
  
  // implements Message ----------------------------------------------
  
  MsgTechLevelInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgTechLevelInfo& from);
  void MergeFrom(const MsgTechLevelInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 level = 1;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 1;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);
  
  // repeated .MsgTechInfo techs = 2;
  inline int techs_size() const;
  inline void clear_techs();
  static const int kTechsFieldNumber = 2;
  inline const ::MsgTechInfo& techs(int index) const;
  inline ::MsgTechInfo* mutable_techs(int index);
  inline ::MsgTechInfo* add_techs();
  inline const ::google::protobuf::RepeatedPtrField< ::MsgTechInfo >&
      techs() const;
  inline ::google::protobuf::RepeatedPtrField< ::MsgTechInfo >*
      mutable_techs();
  
  // @@protoc_insertion_point(class_scope:MsgTechLevelInfo)
 private:
  inline void set_has_level();
  inline void clear_has_level();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::MsgTechInfo > techs_;
  ::google::protobuf::int32 level_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_MessageTechnologyG2C_2eproto();
  friend void protobuf_AssignDesc_MessageTechnologyG2C_2eproto();
  friend void protobuf_ShutdownFile_MessageTechnologyG2C_2eproto();
  
  void InitAsDefaultInstance();
  static MsgTechLevelInfo* default_instance_;
};
// -------------------------------------------------------------------

class MsgTechnologyInfo : public ::google::protobuf::Message {
 public:
  MsgTechnologyInfo();
  virtual ~MsgTechnologyInfo();
  
  MsgTechnologyInfo(const MsgTechnologyInfo& from);
  
  inline MsgTechnologyInfo& operator=(const MsgTechnologyInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgTechnologyInfo& default_instance();
  
  void Swap(MsgTechnologyInfo* other);
  
  // implements Message ----------------------------------------------
  
  MsgTechnologyInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgTechnologyInfo& from);
  void MergeFrom(const MsgTechnologyInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .MsgTechLevelInfo levels = 1;
  inline int levels_size() const;
  inline void clear_levels();
  static const int kLevelsFieldNumber = 1;
  inline const ::MsgTechLevelInfo& levels(int index) const;
  inline ::MsgTechLevelInfo* mutable_levels(int index);
  inline ::MsgTechLevelInfo* add_levels();
  inline const ::google::protobuf::RepeatedPtrField< ::MsgTechLevelInfo >&
      levels() const;
  inline ::google::protobuf::RepeatedPtrField< ::MsgTechLevelInfo >*
      mutable_levels();
  
  // @@protoc_insertion_point(class_scope:MsgTechnologyInfo)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::MsgTechLevelInfo > levels_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_MessageTechnologyG2C_2eproto();
  friend void protobuf_AssignDesc_MessageTechnologyG2C_2eproto();
  friend void protobuf_ShutdownFile_MessageTechnologyG2C_2eproto();
  
  void InitAsDefaultInstance();
  static MsgTechnologyInfo* default_instance_;
};
// -------------------------------------------------------------------

class MsgTechnologyStateACK : public ::google::protobuf::Message {
 public:
  MsgTechnologyStateACK();
  virtual ~MsgTechnologyStateACK();
  
  MsgTechnologyStateACK(const MsgTechnologyStateACK& from);
  
  inline MsgTechnologyStateACK& operator=(const MsgTechnologyStateACK& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgTechnologyStateACK& default_instance();
  
  void Swap(MsgTechnologyStateACK* other);
  
  // implements Message ----------------------------------------------
  
  MsgTechnologyStateACK* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgTechnologyStateACK& from);
  void MergeFrom(const MsgTechnologyStateACK& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .MsgTechnologyInfo info = 1;
  inline bool has_info() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 1;
  inline const ::MsgTechnologyInfo& info() const;
  inline ::MsgTechnologyInfo* mutable_info();
  inline ::MsgTechnologyInfo* release_info();
  
  // @@protoc_insertion_point(class_scope:MsgTechnologyStateACK)
 private:
  inline void set_has_info();
  inline void clear_has_info();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::MsgTechnologyInfo* info_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_MessageTechnologyG2C_2eproto();
  friend void protobuf_AssignDesc_MessageTechnologyG2C_2eproto();
  friend void protobuf_ShutdownFile_MessageTechnologyG2C_2eproto();
  
  void InitAsDefaultInstance();
  static MsgTechnologyStateACK* default_instance_;
};
// -------------------------------------------------------------------

class MsgOpenTechLevelACK : public ::google::protobuf::Message {
 public:
  MsgOpenTechLevelACK();
  virtual ~MsgOpenTechLevelACK();
  
  MsgOpenTechLevelACK(const MsgOpenTechLevelACK& from);
  
  inline MsgOpenTechLevelACK& operator=(const MsgOpenTechLevelACK& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgOpenTechLevelACK& default_instance();
  
  void Swap(MsgOpenTechLevelACK* other);
  
  // implements Message ----------------------------------------------
  
  MsgOpenTechLevelACK* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgOpenTechLevelACK& from);
  void MergeFrom(const MsgOpenTechLevelACK& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 level = 1;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 1;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);
  
  // required .enTechnologyResult en = 2;
  inline bool has_en() const;
  inline void clear_en();
  static const int kEnFieldNumber = 2;
  inline enTechnologyResult en() const;
  inline void set_en(enTechnologyResult value);
  
  // @@protoc_insertion_point(class_scope:MsgOpenTechLevelACK)
 private:
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_en();
  inline void clear_has_en();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 level_;
  int en_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_MessageTechnologyG2C_2eproto();
  friend void protobuf_AssignDesc_MessageTechnologyG2C_2eproto();
  friend void protobuf_ShutdownFile_MessageTechnologyG2C_2eproto();
  
  void InitAsDefaultInstance();
  static MsgOpenTechLevelACK* default_instance_;
};
// -------------------------------------------------------------------

class MsgApplyAddTechInfoACK : public ::google::protobuf::Message {
 public:
  MsgApplyAddTechInfoACK();
  virtual ~MsgApplyAddTechInfoACK();
  
  MsgApplyAddTechInfoACK(const MsgApplyAddTechInfoACK& from);
  
  inline MsgApplyAddTechInfoACK& operator=(const MsgApplyAddTechInfoACK& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgApplyAddTechInfoACK& default_instance();
  
  void Swap(MsgApplyAddTechInfoACK* other);
  
  // implements Message ----------------------------------------------
  
  MsgApplyAddTechInfoACK* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgApplyAddTechInfoACK& from);
  void MergeFrom(const MsgApplyAddTechInfoACK& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 level = 1;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 1;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);
  
  // required int32 id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);
  
  // required int32 current = 3;
  inline bool has_current() const;
  inline void clear_current();
  static const int kCurrentFieldNumber = 3;
  inline ::google::protobuf::int32 current() const;
  inline void set_current(::google::protobuf::int32 value);
  
  // required .enTechnologyResult en = 4;
  inline bool has_en() const;
  inline void clear_en();
  static const int kEnFieldNumber = 4;
  inline enTechnologyResult en() const;
  inline void set_en(enTechnologyResult value);
  
  // @@protoc_insertion_point(class_scope:MsgApplyAddTechInfoACK)
 private:
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_current();
  inline void clear_has_current();
  inline void set_has_en();
  inline void clear_has_en();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 level_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 current_;
  int en_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_MessageTechnologyG2C_2eproto();
  friend void protobuf_AssignDesc_MessageTechnologyG2C_2eproto();
  friend void protobuf_ShutdownFile_MessageTechnologyG2C_2eproto();
  
  void InitAsDefaultInstance();
  static MsgApplyAddTechInfoACK* default_instance_;
};
// -------------------------------------------------------------------

class MsgAddTechValueACK : public ::google::protobuf::Message {
 public:
  MsgAddTechValueACK();
  virtual ~MsgAddTechValueACK();
  
  MsgAddTechValueACK(const MsgAddTechValueACK& from);
  
  inline MsgAddTechValueACK& operator=(const MsgAddTechValueACK& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgAddTechValueACK& default_instance();
  
  void Swap(MsgAddTechValueACK* other);
  
  // implements Message ----------------------------------------------
  
  MsgAddTechValueACK* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgAddTechValueACK& from);
  void MergeFrom(const MsgAddTechValueACK& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 currentvalue = 1;
  inline bool has_currentvalue() const;
  inline void clear_currentvalue();
  static const int kCurrentvalueFieldNumber = 1;
  inline ::google::protobuf::int32 currentvalue() const;
  inline void set_currentvalue(::google::protobuf::int32 value);
  
  // required .enTechnologyResult en = 2;
  inline bool has_en() const;
  inline void clear_en();
  static const int kEnFieldNumber = 2;
  inline enTechnologyResult en() const;
  inline void set_en(enTechnologyResult value);
  
  // @@protoc_insertion_point(class_scope:MsgAddTechValueACK)
 private:
  inline void set_has_currentvalue();
  inline void clear_has_currentvalue();
  inline void set_has_en();
  inline void clear_has_en();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 currentvalue_;
  int en_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_MessageTechnologyG2C_2eproto();
  friend void protobuf_AssignDesc_MessageTechnologyG2C_2eproto();
  friend void protobuf_ShutdownFile_MessageTechnologyG2C_2eproto();
  
  void InitAsDefaultInstance();
  static MsgAddTechValueACK* default_instance_;
};
// ===================================================================


// ===================================================================

// MsgTechInfo

// required int32 id = 1;
inline bool MsgTechInfo::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgTechInfo::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgTechInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgTechInfo::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 MsgTechInfo::id() const {
  return id_;
}
inline void MsgTechInfo::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// required int32 currentCount = 2;
inline bool MsgTechInfo::has_currentcount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgTechInfo::set_has_currentcount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgTechInfo::clear_has_currentcount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgTechInfo::clear_currentcount() {
  currentcount_ = 0;
  clear_has_currentcount();
}
inline ::google::protobuf::int32 MsgTechInfo::currentcount() const {
  return currentcount_;
}
inline void MsgTechInfo::set_currentcount(::google::protobuf::int32 value) {
  set_has_currentcount();
  currentcount_ = value;
}

// -------------------------------------------------------------------

// MsgTechLevelInfo

// required int32 level = 1;
inline bool MsgTechLevelInfo::has_level() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgTechLevelInfo::set_has_level() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgTechLevelInfo::clear_has_level() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgTechLevelInfo::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 MsgTechLevelInfo::level() const {
  return level_;
}
inline void MsgTechLevelInfo::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
}

// repeated .MsgTechInfo techs = 2;
inline int MsgTechLevelInfo::techs_size() const {
  return techs_.size();
}
inline void MsgTechLevelInfo::clear_techs() {
  techs_.Clear();
}
inline const ::MsgTechInfo& MsgTechLevelInfo::techs(int index) const {
  return techs_.Get(index);
}
inline ::MsgTechInfo* MsgTechLevelInfo::mutable_techs(int index) {
  return techs_.Mutable(index);
}
inline ::MsgTechInfo* MsgTechLevelInfo::add_techs() {
  return techs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MsgTechInfo >&
MsgTechLevelInfo::techs() const {
  return techs_;
}
inline ::google::protobuf::RepeatedPtrField< ::MsgTechInfo >*
MsgTechLevelInfo::mutable_techs() {
  return &techs_;
}

// -------------------------------------------------------------------

// MsgTechnologyInfo

// repeated .MsgTechLevelInfo levels = 1;
inline int MsgTechnologyInfo::levels_size() const {
  return levels_.size();
}
inline void MsgTechnologyInfo::clear_levels() {
  levels_.Clear();
}
inline const ::MsgTechLevelInfo& MsgTechnologyInfo::levels(int index) const {
  return levels_.Get(index);
}
inline ::MsgTechLevelInfo* MsgTechnologyInfo::mutable_levels(int index) {
  return levels_.Mutable(index);
}
inline ::MsgTechLevelInfo* MsgTechnologyInfo::add_levels() {
  return levels_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MsgTechLevelInfo >&
MsgTechnologyInfo::levels() const {
  return levels_;
}
inline ::google::protobuf::RepeatedPtrField< ::MsgTechLevelInfo >*
MsgTechnologyInfo::mutable_levels() {
  return &levels_;
}

// -------------------------------------------------------------------

// MsgTechnologyStateACK

// required .MsgTechnologyInfo info = 1;
inline bool MsgTechnologyStateACK::has_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgTechnologyStateACK::set_has_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgTechnologyStateACK::clear_has_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgTechnologyStateACK::clear_info() {
  if (info_ != NULL) info_->::MsgTechnologyInfo::Clear();
  clear_has_info();
}
inline const ::MsgTechnologyInfo& MsgTechnologyStateACK::info() const {
  return info_ != NULL ? *info_ : *default_instance_->info_;
}
inline ::MsgTechnologyInfo* MsgTechnologyStateACK::mutable_info() {
  set_has_info();
  if (info_ == NULL) info_ = new ::MsgTechnologyInfo;
  return info_;
}
inline ::MsgTechnologyInfo* MsgTechnologyStateACK::release_info() {
  clear_has_info();
  ::MsgTechnologyInfo* temp = info_;
  info_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// MsgOpenTechLevelACK

// required int32 level = 1;
inline bool MsgOpenTechLevelACK::has_level() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgOpenTechLevelACK::set_has_level() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgOpenTechLevelACK::clear_has_level() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgOpenTechLevelACK::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 MsgOpenTechLevelACK::level() const {
  return level_;
}
inline void MsgOpenTechLevelACK::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
}

// required .enTechnologyResult en = 2;
inline bool MsgOpenTechLevelACK::has_en() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgOpenTechLevelACK::set_has_en() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgOpenTechLevelACK::clear_has_en() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgOpenTechLevelACK::clear_en() {
  en_ = 0;
  clear_has_en();
}
inline enTechnologyResult MsgOpenTechLevelACK::en() const {
  return static_cast< enTechnologyResult >(en_);
}
inline void MsgOpenTechLevelACK::set_en(enTechnologyResult value) {
  GOOGLE_DCHECK(enTechnologyResult_IsValid(value));
  set_has_en();
  en_ = value;
}

// -------------------------------------------------------------------

// MsgApplyAddTechInfoACK

// required int32 level = 1;
inline bool MsgApplyAddTechInfoACK::has_level() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgApplyAddTechInfoACK::set_has_level() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgApplyAddTechInfoACK::clear_has_level() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgApplyAddTechInfoACK::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 MsgApplyAddTechInfoACK::level() const {
  return level_;
}
inline void MsgApplyAddTechInfoACK::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
}

// required int32 id = 2;
inline bool MsgApplyAddTechInfoACK::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgApplyAddTechInfoACK::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgApplyAddTechInfoACK::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgApplyAddTechInfoACK::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 MsgApplyAddTechInfoACK::id() const {
  return id_;
}
inline void MsgApplyAddTechInfoACK::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// required int32 current = 3;
inline bool MsgApplyAddTechInfoACK::has_current() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgApplyAddTechInfoACK::set_has_current() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgApplyAddTechInfoACK::clear_has_current() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgApplyAddTechInfoACK::clear_current() {
  current_ = 0;
  clear_has_current();
}
inline ::google::protobuf::int32 MsgApplyAddTechInfoACK::current() const {
  return current_;
}
inline void MsgApplyAddTechInfoACK::set_current(::google::protobuf::int32 value) {
  set_has_current();
  current_ = value;
}

// required .enTechnologyResult en = 4;
inline bool MsgApplyAddTechInfoACK::has_en() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MsgApplyAddTechInfoACK::set_has_en() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MsgApplyAddTechInfoACK::clear_has_en() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MsgApplyAddTechInfoACK::clear_en() {
  en_ = 0;
  clear_has_en();
}
inline enTechnologyResult MsgApplyAddTechInfoACK::en() const {
  return static_cast< enTechnologyResult >(en_);
}
inline void MsgApplyAddTechInfoACK::set_en(enTechnologyResult value) {
  GOOGLE_DCHECK(enTechnologyResult_IsValid(value));
  set_has_en();
  en_ = value;
}

// -------------------------------------------------------------------

// MsgAddTechValueACK

// required int32 currentvalue = 1;
inline bool MsgAddTechValueACK::has_currentvalue() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgAddTechValueACK::set_has_currentvalue() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgAddTechValueACK::clear_has_currentvalue() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgAddTechValueACK::clear_currentvalue() {
  currentvalue_ = 0;
  clear_has_currentvalue();
}
inline ::google::protobuf::int32 MsgAddTechValueACK::currentvalue() const {
  return currentvalue_;
}
inline void MsgAddTechValueACK::set_currentvalue(::google::protobuf::int32 value) {
  set_has_currentvalue();
  currentvalue_ = value;
}

// required .enTechnologyResult en = 2;
inline bool MsgAddTechValueACK::has_en() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgAddTechValueACK::set_has_en() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgAddTechValueACK::clear_has_en() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgAddTechValueACK::clear_en() {
  en_ = 0;
  clear_has_en();
}
inline enTechnologyResult MsgAddTechValueACK::en() const {
  return static_cast< enTechnologyResult >(en_);
}
inline void MsgAddTechValueACK::set_en(enTechnologyResult value) {
  GOOGLE_DCHECK(enTechnologyResult_IsValid(value));
  set_has_en();
  en_ = value;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< enTechnologyResult>() {
  return enTechnologyResult_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_MessageTechnologyG2C_2eproto__INCLUDED
